{"version":3,"sources":["components/Search.js","App.js","store/actions/appActions.js","store/store.js","store/reducers/appReducer.js","index.js"],"names":["connect","state","data","_ref","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","_useState3","_useState4","isVisible","setIsVisible","wrapperRef","useRef","handleMousedown","e","wrapper","current","contains","target","updateInput","value","useEffect","window","addEventListener","removeEventListener","react_default","a","createElement","autoComplete","action","className","ref","type","placeholder","onChange","onFocus","prevState","filter","user","username","toLowerCase","startsWith","sort","b","localeCompare","map","tabIndex","key","id","onClick","onKeyDown","substr","length","preventDefault","dispatch","fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","payload","catch","err","console","log","stop","_x","apply","this","arguments","components_Search","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","objectSpread","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3d283274.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Search = ({ data }) => {\n    const [inputValue, setInputValue] = useState(\"\");\n    const [isVisible, setIsVisible] = useState(false);\n    const wrapperRef = useRef(null);\n\n    const handleMousedown = (e) => {\n        const wrapper = wrapperRef.current;\n        if (wrapper && !wrapper.contains(e.target)) {\n            setIsVisible(false);\n        }\n    };\n\n    const updateInput = (value) => {\n        setInputValue(value);\n        setIsVisible(false);\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"mousedown\", handleMousedown);\n        return () => {\n            window.removeEventListener(\"mousedown\", handleMousedown);\n        };\n    });\n\n    return (\n        <form autoComplete=\"off\" action=\"/\">\n            <div className=\"input-wrapper\" ref={wrapperRef}>\n                <input\n                    type=\"text\"\n                    placeholder=\"username\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    onFocus={() => setIsVisible((prevState) => !prevState)}\n                />\n                <div className=\"autocomplete-container\">\n                    {data &&\n                        inputValue &&\n                        isVisible &&\n                        data\n                            .filter((user) =>\n                                user.username\n                                    .toLowerCase()\n                                    .startsWith(inputValue.toLowerCase())\n                            )\n                            .sort((a, b) =>\n                                a.username.localeCompare(b.username)\n                            )\n                            .map((user) => (\n                                <div\n                                    className=\"option\"\n                                    tabIndex={0}\n                                    key={user.id}\n                                    onClick={() => updateInput(user.username)}\n                                    onKeyDown={(e) =>\n                                        e.key === \"Enter\" &&\n                                        updateInput(user.username)\n                                    }\n                                >\n                                    {\n                                        <span>\n                                            <strong>\n                                                {user.username.substr(\n                                                    0,\n                                                    inputValue.length\n                                                )}\n                                            </strong>\n                                            {user.username.substr(\n                                                inputValue.length\n                                            )}\n                                        </span>\n                                    }\n                                </div>\n                            ))}\n                </div>\n            </div>\n            <input\n                type=\"submit\"\n                value=\"Submit\"\n                onClick={(e) => e.preventDefault()}\n            />\n        </form>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { data } = state;\n    return {\n        data,\n    };\n};\n\nexport default connect(mapStateToProps, null)(Search);\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchData } from \"./store/actions/appActions\";\nimport Search from \"./components/Search\";\n\nconst App = ({ fetchData }) => {\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Search />\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: () => dispatch(fetchData()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","export const FETCH_DATA = \"FETCH_DATA\";\r\n\r\nexport const fetchData = () => {\r\n    return async (dispatch) => {\r\n        await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then((response) => response.json())\r\n            .then((data) =>\r\n                dispatch({\r\n                    type: FETCH_DATA,\r\n                    payload: data,\r\n                })\r\n            )\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { appReducer } from \"../store/reducers/appReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancer =\r\n    (typeof window !== \"undefined\" &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n\r\nconst store = createStore(appReducer, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import { FETCH_DATA } from \"../actions/appActions\";\r\n\r\nexport const appReducer = (state = { data: null }, action) => {\r\n    switch (action.type) {\r\n        case FETCH_DATA:\r\n            return { ...state, data: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}